name: Generate Demo GIF

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - assets/demo.svg
      - .github/workflows/generate-demo-gif.yml

permissions:
  contents: write

jobs:
  build-gif:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y imagemagick librsvg2-bin fonts-dejavu-core
      - name: Render frames from SVG (terminal-style)
        run: |
          set -euo pipefail
          mkdir -p .work
          rsvg-convert -w 1040 -h 360 assets/demo-real.svg -o .work/base.png
          # common text attributes
          FONT="DejaVu-Sans-Mono"
          # Frame 1 – open + /solo
          convert .work/base.png -gravity NorthWest -font "$FONT" -pointsize 18 \
            -fill '#58a6ff' -annotate +40+70 '$ codex' \
            -fill '#c9d1d9' -annotate +40+100 '/solo enabled ✓   interval=30s   exit_on_success=true' \
            -fill '#8b949e' -annotate +40+130 'kickoff: 实现并让测试通过' \
            .work/frame1.png
          # Frame 2 – run, failing tests
          convert .work/base.png -gravity NorthWest -font "$FONT" -pointsize 18 \
            -fill '#58a6ff' -annotate +40+70 '$ codex' \
            -fill '#c9d1d9' -annotate +40+100 'success_cmd: pytest -q' \
            -fill '#d29922' -annotate +300+100 '→ exit=1' \
            -fill '#8b949e' -annotate +40+130 '… auto-continue' \
            .work/frame2.png
          # Frame 3 – keep iterating
          convert .work/base.png -gravity NorthWest -font "$FONT" -pointsize 18 \
            -fill '#58a6ff' -annotate +40+70 '$ codex' \
            -fill '#c9d1d9' -annotate +40+100 'continue: fix tests' \
            -fill '#8b949e' -annotate +40+130 'running…' \
            .work/frame3.png
          # Frame 4 – success
          convert .work/base.png -gravity NorthWest -font "$FONT" -pointsize 18 \
            -fill '#58a6ff' -annotate +40+70 '$ codex' \
            -fill '#c9d1d9' -annotate +40+100 'success_cmd: pytest -q' \
            -fill '#3fb950' -annotate +300+100 '→ exit=0' \
            -fill '#3fb950' -annotate +40+130 'SUCCESS proof: exit code 0 — exiting' \
            .work/frame4.png
      - name: Assemble GIF
        run: |
          set -euo pipefail
          mkdir -p assets
          convert \
            -loop 0 \
            -delay 120 .work/frame1.png \
            -delay 90  .work/frame2.png \
            -delay 90  .work/frame3.png \
            -delay 140 .work/frame4.png \
            -colors 128 -dither FloydSteinberg -layers Optimize \
            assets/tui-demo.gif
          identify assets/tui-demo.gif || true
      - name: Commit GIF if changed
        run: |
          set -euo pipefail
          if git status --porcelain -- assets/tui-demo.gif | grep -q '^ M\|^??'; then
            git config user.name 'github-actions'
            git config user.email 'github-actions@users.noreply.github.com'
            git add assets/tui-demo.gif
            git commit -m 'docs(demo): auto-generate GIF from demo.svg [skip ci]'
            git push
          else
            echo 'No changes to GIF.'
          fi
